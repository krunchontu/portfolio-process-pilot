name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  backend-swagger:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Generate Swagger JSON
      working-directory: ./backend
      run: npm run swagger:json

    - name: Upload swagger.json artifact
      uses: actions/upload-artifact@v3
      with:
        name: swagger-json
        path: backend/docs/swagger.json
        retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: backend-swagger

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Download swagger.json artifact
      uses: actions/download-artifact@v3
      with:
        name: swagger-json
        path: backend/docs/

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Generate API types from Swagger
      working-directory: ./frontend
      run: npm run api:types

    - name: Verify API types generated
      run: |
        if [ ! -f frontend/src/types/api.d.ts ]; then
          echo "❌ API types not generated"
          exit 1
        fi
        echo "✅ API types generated successfully"

    - name: Run type checking
      working-directory: ./frontend
      run: npm run type-check

    - name: Run linting
      working-directory: ./frontend
      run: npm run lint

    - name: Run unit tests
      working-directory: ./frontend
      run: npm run test:coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: frontend-test-results-node-${{ matrix.node-version }}
        path: |
          frontend/coverage/
          frontend/src/types/api.d.ts